% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addGeoArrowScatterplotLayer.R
\name{addGeoArrowScatterplotLayer}
\alias{addGeoArrowScatterplotLayer}
\title{Add a geoarrow based Deck.gl ScatterplotLayer to a \code{\link[mapgl:maplibre]{mapgl::maplibre()}} map.}
\usage{
addGeoArrowScatterplotLayer(
  map,
  data,
  layerId,
  geom_column_name = attr(data, "sf_column"),
  popup = NULL,
  tooltip = NULL,
  render_options = renderOptions(),
  data_accessors = dataAccessors(),
  popup_options = popupOptions(),
  tooltip_options = tooltipOptions(),
  map_class = "maplibregl",
  ...
)
}
\arguments{
\item{map}{the \code{\link[mapgl:maplibre]{mapgl::maplibre()}} map to add the layer to.}

\item{data}{a sf \verb{(MULTI)POINT} object.}

\item{layerId}{the layer id.}

\item{geom_column_name}{the name of the geometry column of the sf object.
It is inferred automatically if only one is present.}

\item{popup}{should a popup be contructed? If \code{TRUE}, will create a popup fromm all
available attributes of the feature. Can also be a character vector of column
names, on which case the popup will include only those columns. If a single character
is supplied, then this will be shown for all features. If \code{NULL} (deafult) or
\code{FALSE}, no popup will be shown.}

\item{tooltip}{should a tooltip be contructed? If \code{TRUE}, will create a tooltip fromm all
available attributes of the feature. Can also be a character vector of column
names, on which case the tooltip will include only those columns. If a single character
is supplied, then this will be shown for all features. If \code{NULL} (deafult) or
\code{FALSE}, no tooltip will be shown.}

\item{render_options}{a list of \link{renderOptions}}

\item{data_accessors}{a list of \link{dataAccessors}}

\item{popup_options}{a list of \link{popupOptions}}

\item{tooltip_options}{a list of \link{tooltipOptions}}

\item{...}{currently not used.}
}
\description{
Add a geoarrow based Deck.gl ScatterplotLayer to a \code{\link[mapgl:maplibre]{mapgl::maplibre()}} map.
}
\examples{
library(mapgl)
library(sf)

n = 5e3
dat = data.frame(
  id = 1:n
  , x = runif(n, -180, 180)
  , y = runif(n, -60, 60)
)
dat = st_as_sf(
  dat
  , coords = c("x", "y")
  , crs = 4326
)
dat$fillColor = sample(hcl.colors(n, alpha = sample(seq(0, 1, length.out = n))))
dat$lineColor = sample(
  hcl.colors(n, alpha = sample(seq(0, 1, length.out = n)), palette = "inferno")
)
dat$radius = sample.int(15, nrow(dat), replace = TRUE)
dat$lineWidth = sample.int(5, nrow(dat), replace = TRUE)

m = maplibre(
  style = 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json'
) |>
  add_navigation_control(visualize_pitch = TRUE) |>
  add_layers_control(collapsible = TRUE, layers = c("test"))

m |>
  addGeoArrowScatterplotLayer(
    data = dat
    , layerId = "test"
    , geom_column_name = attr(dat, "sf_column")
    , render_options = renderOptions()
    , data_accessors = dataAccessors(
      getRadius = "radius"
      , getFillColor = "fillColor"
      , getLineWidth = "lineWidth"
      , getLineColor = "lineColor"
    )
    , popup = TRUE
    , popup_options = popupOptions(anchor = "bottom-right")
    , tooltip = TRUE
    , tooltip_options = tooltipOptions(anchor = "top-left")
  )

}
