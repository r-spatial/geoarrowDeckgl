/**
 * Minified by jsDelivr using Terser v5.37.0.
 * Original file: /npm/@deck.gl/mapbox@9.1.4/dist/mapbox-overlay.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{Deck,assert}from"@deck.gl/core";import{getViewState,getDefaultView,getDeckInstance,removeDeckInstance,getDefaultParameters}from"./deck-utils.js";import{log}from"@deck.gl/core";import{resolveLayers}from"./resolve-layers.js";export default class MapboxOverlay{constructor(e){this._handleStyleChange=()=>{resolveLayers(this._map,this._deck,this._props.layers,this._props.layers)},this._updateContainerSize=()=>{if(this._map&&this._container){const{clientWidth:e,clientHeight:t}=this._map.getContainer();Object.assign(this._container.style,{width:`${e}px`,height:`${t}px`})}},this._updateViewState=()=>{const e=this._deck,t=this._map;e&&t&&(e.setProps({views:this._props.views||getDefaultView(t),viewState:getViewState(t)}),e.isInitialized&&e.redraw())},this._handleMouseEvent=e=>{const t=this._deck;if(!t||!t.isInitialized)return;const s={type:e.type,offsetCenter:e.point,srcEvent:e},i=this._lastMouseDownPoint;switch(!e.point&&i&&(s.deltaX=e.originalEvent.clientX-i.clientX,s.deltaY=e.originalEvent.clientY-i.clientY,s.offsetCenter={x:i.x+s.deltaX,y:i.y+s.deltaY}),s.type){case"mousedown":t._onPointerDown(s),this._lastMouseDownPoint={...e.point,clientX:e.originalEvent.clientX,clientY:e.originalEvent.clientY};break;case"dragstart":s.type="panstart",t._onEvent(s);break;case"drag":s.type="panmove",t._onEvent(s);break;case"dragend":s.type="panend",t._onEvent(s);break;case"click":s.tapCount=1,t._onEvent(s);break;case"dblclick":s.type="click",s.tapCount=2,t._onEvent(s);break;case"mousemove":s.type="pointermove",t._onPointerMove(s);break;case"mouseout":s.type="pointerleave",t._onPointerMove(s);break;default:return}};const{interleaved:t=!1,...s}=e;this._interleaved=t,this._props=s}setProps(e){this._interleaved&&e.layers&&resolveLayers(this._map,this._deck,this._props.layers,e.layers),Object.assign(this._props,e),this._deck&&this._map&&this._deck.setProps({...this._props,parameters:{...getDefaultParameters(this._map,this._interleaved),...this._props.parameters}})}onAdd(e){return this._map=e,this._interleaved?this._onAddInterleaved(e):this._onAddOverlaid(e)}_onAddOverlaid(e){const t=document.createElement("div");return Object.assign(t.style,{position:"absolute",left:0,top:0,textAlign:"initial",pointerEvents:"none"}),this._container=t,this._deck=new Deck({...this._props,parent:t,parameters:{...getDefaultParameters(e,!1),...this._props.parameters},views:this._props.views||getDefaultView(e),viewState:getViewState(e)}),e.on("resize",this._updateContainerSize),e.on("render",this._updateViewState),e.on("mousedown",this._handleMouseEvent),e.on("dragstart",this._handleMouseEvent),e.on("drag",this._handleMouseEvent),e.on("dragend",this._handleMouseEvent),e.on("mousemove",this._handleMouseEvent),e.on("mouseout",this._handleMouseEvent),e.on("click",this._handleMouseEvent),e.on("dblclick",this._handleMouseEvent),this._updateContainerSize(),t}_onAddInterleaved(e){const t=e.painter.context.gl;return t instanceof WebGLRenderingContext&&log.warn("Incompatible basemap library. See: https://deck.gl/docs/api-reference/mapbox/overview#compatibility")(),this._deck=getDeckInstance({map:e,gl:t,deck:new Deck({...this._props,gl:t})}),e.on("styledata",this._handleStyleChange),resolveLayers(e,this._deck,[],this._props.layers),document.createElement("div")}onRemove(){const e=this._map;e&&(this._interleaved?this._onRemoveInterleaved(e):this._onRemoveOverlaid(e)),this._deck=void 0,this._map=void 0,this._container=void 0}_onRemoveOverlaid(e){e.off("resize",this._updateContainerSize),e.off("render",this._updateViewState),e.off("mousedown",this._handleMouseEvent),e.off("dragstart",this._handleMouseEvent),e.off("drag",this._handleMouseEvent),e.off("dragend",this._handleMouseEvent),e.off("mousemove",this._handleMouseEvent),e.off("mouseout",this._handleMouseEvent),e.off("click",this._handleMouseEvent),e.off("dblclick",this._handleMouseEvent),this._deck?.finalize()}_onRemoveInterleaved(e){e.off("styledata",this._handleStyleChange),resolveLayers(e,this._deck,this._props.layers,[]),removeDeckInstance(e)}getDefaultPosition(){return"top-left"}pickObject(e){return assert(this._deck),this._deck.pickObject(e)}pickMultipleObjects(e){return assert(this._deck),this._deck.pickMultipleObjects(e)}pickObjects(e){return assert(this._deck),this._deck.pickObjects(e)}finalize(){this._map&&this._map.removeControl(this)}getCanvas(){return this._map?this._interleaved?this._map.getCanvas():this._deck.getCanvas():null}}
//# sourceMappingURL=/sm/38a51b106d2752d4777bf152e4dbb68d5a02f2764954e7a2d697106932c9e985.map